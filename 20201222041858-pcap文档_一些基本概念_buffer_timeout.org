#+title: pcap文档：一些基本概念： buffer timeout
#+ROAM_TAGS: pcap
#+roam_alias: 

* 主要内容
- packet buffer timeout :: 包缓冲时延。如果抓包的时候，每个包一到达，就把他发给应用程序（立即模式），那么抓包的应用程序就需要高频率的唤醒并高频率的从操作系统那里抓取包。所以我们可以每隔一段时间（包缓冲时延）发送一次抓取到的很多包。如果要收的包很多的话，这可以减少每个包的CPU开销。注意：即使包缓冲没有被填满，也会依照时延将已接收到的包发送出去。
  如果该值设为0，那么就相当于永久时延，一直等到缓冲被填满，包就发出去。
  这个值不可以用来让抓包的函数在有限时间内返回。因为一些系统中不支持时延。一些系统中时延是在第一个包到达时开始计算。
- immediate mode :: 立即模式。每个包一到达就发给应用程序，不缓冲。
- buffer size :: 缓冲尺度到达的包首先存放在缓冲里，所以应用程序不需要每个包到的时候都读取。某些系统中缓冲的大小可以设置。
  如果设置得太小，那么如果过来的包很多，快照长度也无法有效限制数据量，那么如果在应用程序读取之前，缓冲满了，就可能出现丢包。所以这个值设置的足够大是有必要的。非页面（non-pageable）的操作系统内存被用来存储缓冲。
- snap length :: 快照长度。有时候不想抓取整个包，只需要头部分，我们就可以设置这个变量作为截取包的长度。

* 参考
https://man7.org/linux/man-pages/man3/pcap.3pcap.html#top_of_page
