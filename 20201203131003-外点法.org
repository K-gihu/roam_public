#+title: 外点惩罚函数法
#+roam_tags: 工程优化方法
#+roam_alias:

* 定义 :ATTACH:
:PROPERTIES:
:ID:       d66628bf-fa72-49f0-9711-50d59eb7c8aa
:END:
- 一种[[file:20201203124239-惩罚函数法.org][惩罚函数法]]。对违反约束的（不可行点）点施加惩罚 \(Mp(x)\) ，可行点不惩罚。迭代点 \(x^{* }(M) \) 一般在可行域 *外部* 移动。
- \(x^{* }(M) \) 就是无约束优化问题 \(\min F(x,M)=f(x)+Mp(x)\) 的极小点
- 罚函数 \(p(x)\) 应该满足三个条件
  - 连续
  - \(p(x) = 0,\forall x \in D\) 使得 \(F(x,M)=f(x)\) ，可行域内无惩罚
  - \(p(x)>0,\forall x \not\in D\) 使得 \(F(x,M)=f(x)+Mp(x)\) ，可行域外有惩罚
- 构造罚函数：\(p(x)=\sum_{i=1}^m (\min\{g_i(x),0\})^{2}+\sum_{j=1}^l h_j^{2} (x)\)
- 罚因子 \(M\) 在实际计算中取一个递增、趋于 \(+\infty\) 的罚因子序列，然后求解一系列无约束问题 \(\min F(x,M_k)\) 。
- 几何直观：外点法使得可行域外的函数曲线逐渐抬高，直到曲线的极小点成为可行域内的极小点。
  #+attr_org: :width 444
  [[attachment:_20201203_132621screenshot.png]]


* 性质或关系
- *定理：* 外点惩罚函数法构造的无约束优化问题的最优解，如果在可行域内，就是相应的约束优化问题的最优解。
  + 证明： \(x^{* } (M)\) 是 \(\min F(x,M)\) 的最优解意味着 \(\forall x \in D: F(x^{ * } (M),M) \leq F(x,M)\)
    而 \(x^{* } ,x \in D\) 导致 \(p(x)=0\) ，那么上面的等式化为
    \(\forall x \in D: f(x^{*} ) \leq f(x)\)
    即证。
* 算法步骤 :ATTACH:
:PROPERTIES:
:ID:       6de086a3-6976-42e3-b7e9-416d9ac326d7
:END:

#+attr_org: :width 444
[[attachment:_20201203_133547screenshot.png]]
